name: homepage_deployment

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  laravel-tests:

    runs-on: ubuntu-latest

    steps:
    - uses: shivammathur/setup-php@2.14.0
      with:
        php-version: '8.0'
    - uses: actions/checkout@v2.3.4
    - name: Copy .env
      run: php -r "file_exists('.env') || copy('.env.example', '.env');"
    - name: Install Dependencies
      run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
    - name: Generate key
      run: php artisan key:generate
#    - name: Directory Permissions
#      run: chmod -R 777 storage bootstrap/cache
    - name: Create Database
      run: |
        mkdir -p database
        touch database/database.sqlite
    - name: Execute tests (Unit and Feature tests) via PHPUnit
      env:
        DB_CONNECTION: sqlite
        DB_DATABASE: database/database.sqlite
      run: vendor/bin/phpunit
    - name: Install Dependencies
      run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist --no-dev --optimize-autoloader

#  build:
#    runs-on: ubuntu-latest
#
#    steps:
#
#      - name: Checkout
#        uses: actions/checkout@v2.3.4
#      - name: Setup Node.js environment
#        uses: actions/setup-node@v2.4.0
#        with:
#          node-version: '12'
#          check-latest: true
#      - name: Install NPM dependencies
#        run: npm install
#      - name: Compile assets for production
#        run: npm run prod


  deploy:

    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: SSH Remote Commands
        uses: appleboy/ssh-action@v0.1.4
        with:
          host: ${{ secrets.SSH_HOST }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
#          passphrase: ${{ secrets.SSH_PRIVATE_KEY_PASSPHRASE }}
          username: ${{ secrets.SSH_USERNAME }}
          script: |
            cd /var/www/Homepage/
            git checkout -f
            git pull
            composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist --no-dev --optimize-autoloader
            npm install
            npm run prod
            php artisan optimize:clear
